shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
##### Team O: TRADITIONAL #####
output$team_off_traditional <- renderDataTable({
traditional_off_df <- leverage_stats_raw_data() %>%
filter(
POSS_FOR != ''
) %>%
group_by(POSS_FOR) %>%
summarize(
GP = n_distinct(Game_Code),
AST = sum(Action == 'AS'),
TO = sum(Action == 'TO'),
FG3M = sum(Action == '3FGM'),
FG3A = sum(Action == '3FGA'),
FG2M = sum(Action == '2FGM'),
FG2A = sum(Action == '2FGA'),
FTM = sum(Action == 'FTM'),
FTA = sum(Action == 'FTA')
) %>%
ungroup() %>%
mutate(
PTS = (FG3M*3) + (FG2M*2) + (FTM*1),
FGM = FG3M + FG2M,
FGA = FG3A + FG3M + FG2A + FG2M,
FTA = FTA + FTM
) %>%
mutate(
FG_PCT = round((FG3M + FG2M) / FGA, 3),
FT_PCT = round(FTM / FTA, 3)
) %>%
select(
POSS_FOR, GP, PTS, AST, TO,
FGM, FGA, FG_PCT,
FTM, FTA, FT_PCT
) %>%
arrange(POSS_FOR)
colnames(traditional_off_df)[1] <- 'Team'
datatable(
traditional_off_df,
class = 'display compact order-column', # no wrap
filter = 'top',
rownames = F,
options = list(
paging = T,
pageLength = 25,
autoWidth = T,
scrollX = T
)
)
})
runApp()
library(tidyverse)
df <- read.csv('D:/Sports_Analytics/EL_Apps/EL_Team_App/Data/df_poss_data_stats_20250308.txt') %>%
head(3600)
df %>%
head()
df <- read.csv('D:/Sports_Analytics/EL_Apps/EL_Team_App/Data/df_poss_data_stats_20250308.txt') %>%
head(3600) %>%
select(-X)
df %>%
head()
df %>%
filter(
Action == 'O'
) %>%
head()
df %>%
head(26)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
##### Team O: TRADITIONAL #####
output$team_off_traditional <- renderDataTable({
datatable(
traditional_off_agg(),
class = 'display compact order-column', # no wrap
filter = 'top',
rownames = F,
options = list(
paging = T,
pageLength = 25,
autoWidth = T,
scrollX = T
)
)
})
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
gc()
