#
#   a('A', href = 'A'), " | ",
#   a('B', href = 'B'), " | ",
#   a('C', href = 'C')
#
# ),
# Collapsible panels
bsCollapse(
id = 'glossaryCollapse', open = 'PHASE', multiple = TRUE,
bsCollapsePanel(
title = tagList(h3(id = 'ID_PHASE', 'PHASE')),
p('Represents the phase of the league:'),
tags$ul(
tags$li('RS: Regular Season'),
tags$li('PO: Play-off'),
tags$li('FF: Final Four')
),
style = 'info',
value = 'PHASE'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_CODETEAM', 'CODETEAM')),
p('Abbreviation for each team.'),
style = 'info',
value = 'CODETEAM'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_GP', 'GP')),
p('Total games played.'),
style = 'info',
value = 'GP'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG3M', 'FG3M')),
p('Number of made 3-pointers.'),
style = 'info',
value = 'FG3M'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG3A', 'FG3A')),
p('Number of attempted 3-pointers.'),
style = 'info',
value = 'FG3A'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG2M', 'FG2M')),
p('Number of made 2-pointers.'),
style = 'info',
value = 'FG2M'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG2A', 'FG2A')),
p('Number of attempted 2-pointers.'),
style = 'info',
value = 'FG2A'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FTM', 'FTM')),
p('Number of made free throws.'),
style = 'info',
value = 'FTM'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FTA', 'FTA')),
p('Number of attempted free throws.'),
style = 'info',
value = 'FTA'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_ASTD', 'ASTD')),
p('Number of assists, including free throw assists.'),
style = 'info',
value = 'ASTD'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_TOV', 'TOV')),
p('Number of turnovers.'),
style = 'info',
value = 'TOV'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_PTS', 'PTS')),
p('Scored points.'),
style = 'info',
value = 'PTS'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG3PCT', 'FG3_PCT')),
p('Percentage of made three pointers.'),
style = 'info',
value = 'FG3_PCT'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG2PCT', 'FG2_PCT')),
p('Percentage of made two pointers.'),
style = 'info',
value = 'FG2_PCT'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FTPCT', 'FT_PCT')),
p('Percentage of made free throws.'),
style = 'info',
value = 'FT_PCT'
)
)
)
),
tabPanel(
'Advanced',
bsCollapse(
id = 'glossaryCollapse2', open = 'POSS', multiple = TRUE,
bsCollapsePanel(
title = tagList(h3(id = 'ID_PHASE', 'PHASE')),
p('Represents the phase of the league:'),
tags$ul(
tags$li('RS: Regular Season'),
tags$li('PO: Play-off'),
tags$li('FF: Final Four')
),
style = 'info',
value = 'PHASE'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_CODETEAM', 'CODETEAM')),
p('Abbreviation for each team.'),
style = 'info',
value = 'CODETEAM'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_POSSIMP', 'POSS_IMP')),
p(HTML('Represents the <i>possession importance</i>, which is quantified by
<i> how much a possession can swing the win probability </i>.
Allows you to filter garbage time, see which type of possessions
teams or players drive their stats from.')),
tags$ul(
tags$li('Low'),
tags$li('Medium'),
tags$li('High'),
tags$li('Very High')
),
style = 'info',
value = 'POSS_IMP'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_POSS', 'POSS')),
p(HTML('Number of possessions. A <i>possession</i> ends when a team loses
the control of the ball either via a made shot, a missed shot followed by a defensive rebound,
a turnover. An offensive rebound does not end a possession, rather extends it.')),
style = 'info',
value = 'POSS'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_ORTG', 'ORTG')),
p(HTML('Points per 75 possessions.')),
style = 'info',
value = 'ORTG'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG3M', 'FG3M')),
p('Number of made 3-pointers.'),
style = 'info',
value = 'FG3M'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG3A', 'FG3A')),
p('Number of attempted 3-pointers.'),
style = 'info',
value = 'FG3A'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG2M', 'FG2M')),
p('Number of made 2-pointers.'),
style = 'info',
value = 'FG2M'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG2A', 'FG2A')),
p('Number of attempted 2-pointers.'),
style = 'info',
value = 'FG2A'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FTM', 'FTM')),
p('Number of made free throws.'),
style = 'info',
value = 'FTM'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FTA', 'FTA')),
p('Number of attempted free throws.'),
style = 'info',
value = 'FTA'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_ASTD', 'ASTD')),
p('Number of assists, including free throw assists.'),
style = 'info',
value = 'ASTD'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_PTS', 'PTS')),
p('Scored points.'),
style = 'info',
value = 'PTS'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG3PCT', 'FG3_PCT')),
p('Percentage of made three pointers.'),
style = 'info',
value = 'FG3_PCT'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG2PCT', 'FG2_PCT')),
p('Percentage of made two pointers.'),
style = 'info',
value = 'FG2_PCT'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FTMPCT', 'FTM_PCT')),
p('Percentage of made free throws.'),
style = 'info',
value = 'FTM_PCT'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_EFG', 'EFG_PCT')),
p('Effective field goal percentage, gives additional weight to
3-pointers since they worth more than 2-pointers.'),
style = 'info',
value = 'EFG_PCT'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_TSPCT', 'TS_PCT')),
p('True shooting percentage, accounts for free throws as well. It quantifies
the field goal percentage under the assumption that all points are made through 2-pointers.
In other words, what would the field goal percentage be if a player or team found them through
2-pointers.'),
style = 'info',
value = 'TS_PCT'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_ASTPP', 'AST_PP')),
p('Assists per possession.'),
style = 'info',
value = 'AST_PP'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_TOVPP', 'TOV_PP')),
p('Turnovers per possession.'),
style = 'info',
value = 'TOV_PP'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_ASTTOTOV', 'AST_TOV')),
p('Assist to turnover ratio.'),
style = 'info',
value = 'AST_TOV'
)
)
)
),
tabPanel(
'Scoring',
bsCollapse(
id = 'glossaryCollapse3', open = 'POSS_IMP', multiple = TRUE,
bsCollapsePanel(
title = tagList(h3(id = 'ID_PHASE', 'PHASE')),
p('Represents the phase of the league:'),
tags$ul(
tags$li('RS: Regular Season'),
tags$li('PO: Play-off'),
tags$li('FF: Final Four')
),
style = 'info',
value = 'PHASE'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_CODETEAM', 'CODETEAM')),
p('Abbreviation for each team.'),
style = 'info',
value = 'CODETEAM'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_POSSIMP', 'POSS_IMP')),
p(HTML('Represents the <i>possession importance</i>, which is quantified by
<i> how much a possession can swing the win probability </i>.
Allows you to filter garbage time, see which type of possessions
teams or players drive their stats from.')),
tags$ul(
tags$li('Low'),
tags$li('Medium'),
tags$li('High'),
tags$li('Very High')
),
style = 'info',
value = 'POSS_IMP'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG3M', 'FG3M')),
p('Number of made 3-pointers.'),
style = 'info',
value = 'FG3M'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG3A', 'FG3A')),
p('Number of attempted 3-pointers.'),
style = 'info',
value = 'FG3A'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG3PCT', 'FG3_PCT')),
p('Percentage of made three pointers.'),
style = 'info',
value = 'FG3_PCT'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_PCTASTD3', 'PCT_ASTD_3')),
p('Percentage of assisted made 3-pointers.'),
style = 'info',
value = 'PCT_ASTD_3'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG2M', 'FG2M')),
p('Number of made 2-pointers.'),
style = 'info',
value = 'FG2M'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG2A', 'FG2A')),
p('Number of attempted 2-pointers.'),
style = 'info',
value = 'FG2A'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_FG2PCT', 'FG2_PCT')),
p('Percentage of made two pointers.'),
style = 'info',
value = 'FG2_PCT'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_PCTASTD3', 'PCT_ASTD_2')),
p('Percentage of assisted made 2-pointers.'),
style = 'info',
value = 'PCT_ASTD_2'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_PCTFB', 'PCT_FASTBREAK')),
p('Percentage of made field goals from fastbreak.'),
style = 'info',
value = 'PCT_FASTBREAK'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_PCT2ND', 'PCT_2ND_CHANCE')),
p('Percentage of made field goals from second chance.'),
style = 'info',
value = 'PCT_2ND_CHANCE'
),
bsCollapsePanel(
title = tagList(h3(id = 'ID_PCTOFFTOV', 'PCT_OFF_TOV')),
p('Percentage of made field goals off turnover.'),
style = 'info',
value = 'PCT_OFF_TOV'
)
)
),
tabPanel(
'By Zone',
)
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
84.5/75
(84.5/75) * 2093
(88.9/75) * 2144
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(tidyverse)
curr_dt <- format(as.Date(Sys.time(), format='%Y%m%d'), '%Y%m%d')
shots_file <- paste0('D:/Sports_Analytics/EL_API/df_fin_shots_',
'20250315',
'.csv')
df <- read.csv(shots_file, sep = ',')[, -1]%>%
filter(
!(SHOT_ZONE_BASIC == 'Above the Break 3' & SHOT_ZONE_AREA_2 %in% c('Left', 'Right'))
) %>%
mutate(
SHOT_ZONE_DIST = case_when(
SHOT_ZONE_BASIC == 'Corner 3' & SHOT_ZONE_DIST == '16-22 ft.' ~ '22+ ft.',
TRUE ~ SHOT_ZONE_DIST)
)
league_avgs <- df %>%
group_by(SHOT_ZONE_BASIC, SHOT_ZONE_AREA_2, SHOT_ZONE_DIST, poss_val_cat) %>%
summarize(
tot_FGM = sum(FGM_FLAG),
tot_FGA = sum(FGA_FLAG),
area_perc = round(sum(FGM_FLAG) / sum(FGA_FLAG), 3)
) %>%
ungroup()
View(df)
teams <- df %>%
mutate(
PTS = case_when(
(as.numeric(shot_value) == 2) & (FGM_FLAG == 1) ~ 2,
(as.numeric(shot_value) == 3) & (FGM_FLAG == 1) ~ 3,
FGM_FLAG == 0 ~ 0
)
) %>%
group_by(CODETEAM, SHOT_ZONE_BASIC, SHOT_ZONE_AREA_2, SHOT_ZONE_DIST, poss_val_cat) %>%
summarize(
tm_FGM = sum(FGM_FLAG),
tm_FGA = sum(FGA_FLAG),
tm_area_perc = round(sum(FGM_FLAG) / sum(FGA_FLAG), 3),
tm_area_pts = sum(PTS)
) %>%
ungroup()
merged_df <- merge(tm, league_avgs,
by = c('SHOT_ZONE_BASIC', 'SHOT_ZONE_AREA_2',
'SHOT_ZONE_DIST', 'poss_val_cat'))
merged_df <- merge(teams, league_avgs,
by = c('SHOT_ZONE_BASIC', 'SHOT_ZONE_AREA_2',
'SHOT_ZONE_DIST', 'poss_val_cat'))
merged_df <- merged_df %>%
select(-tot_FGM, -tot_FGA)
merged_df <- merged_df %>%
mutate(
# eFGM = case_when(
#   SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
#   ~ plyr_FGM * 1.5,
#   !SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
#   ~ plyr_FGM
# ),
xPTS = case_when(
SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
~ plyr_FGA * area_perc * 3,
!SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
~ plyr_FGA * area_perc * 2
),
# PTS = case_when(
#   SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
#   ~ plyr_FGA * plyr_area_perc * 3,
#   !SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
#   ~ plyr_FGA * plyr_area_perc * 2
# )
)
merged_df <- merged_df %>%
mutate(
# eFGM = case_when(
#   SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
#   ~ plyr_FGM * 1.5,
#   !SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
#   ~ plyr_FGM
# ),
xPTS = case_when(
SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
~ tm_FGA * area_perc * 3,
!SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
~ tm_FGA * area_perc * 2
),
# PTS = case_when(
#   SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
#   ~ plyr_FGA * plyr_area_perc * 3,
#   !SHOT_ZONE_BASIC %in% c('Above the Break 3', 'Corner 3')
#   ~ plyr_FGA * plyr_area_perc * 2
# )
)
final_df <- merged_df %>%
group_by(PLAYER_TEAM) %>%
summarize(
tot_xPTS = sum(xPTS),
tot_PTS = sum(tm_area_pts),
# tot_eFGM = sum(eFGM),
tot_FGA = sum(tm_FGA)
)
final_df <- merged_df %>%
group_by(CODETEAM) %>%
summarize(
tot_xPTS = sum(xPTS),
tot_PTS = sum(tm_area_pts),
# tot_eFGM = sum(eFGM),
tot_FGA = sum(tm_FGA)
)
final_df$eFG <- round(final_df$tot_PTS / (2 * final_df$tot_FGA), 3)
head(final_df, 20)
final_df$xeFG <- round(final_df$tot_xPTS / (2 * final_df$tot_FGA), 3)
final_df$SM <- round((final_df$tot_PTS - final_df$tot_xPTS) / final_df$tot_FGA, 3)
final_df$PTS_Added <- round(final_df$SM * final_df$tot_FGA, 1)
final_df
curr_dt <- '20250315'
write.csv(final_df, file = paste0('D:/Sports_Analytics/EL_API/xPTS_tm_', curr_dt, '.csv'))
write.csv(final_df, file = paste0('D:/Sports_Analytics/EL_Apps/xPTS_tm_', curr_dt, '.csv'))
gc()
shiny::runApp()
runApp()
gc()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
gc()
gc()
runApp()
runApp()
